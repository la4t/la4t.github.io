define(function (require, exports, module) {/*
 * Generated by PEG.js 0.10.0.
 *
 * http://pegjs.org/
 */

"use strict";

function peg$subclass(child, parent) {
  function ctor() { this.constructor = child; }
  ctor.prototype = parent.prototype;
  child.prototype = new ctor();
}

function peg$SyntaxError(message, expected, found, location) {
  this.message  = message;
  this.expected = expected;
  this.found    = found;
  this.location = location;
  this.name     = "SyntaxError";

  if (typeof Error.captureStackTrace === "function") {
    Error.captureStackTrace(this, peg$SyntaxError);
  }
}

peg$subclass(peg$SyntaxError, Error);

peg$SyntaxError.buildMessage = function(expected, found) {
  var DESCRIBE_EXPECTATION_FNS = {
        literal: function(expectation) {
          return "\"" + literalEscape(expectation.text) + "\"";
        },

        "class": function(expectation) {
          var escapedParts = "",
              i;

          for (i = 0; i < expectation.parts.length; i++) {
            escapedParts += expectation.parts[i] instanceof Array
              ? classEscape(expectation.parts[i][0]) + "-" + classEscape(expectation.parts[i][1])
              : classEscape(expectation.parts[i]);
          }

          return "[" + (expectation.inverted ? "^" : "") + escapedParts + "]";
        },

        any: function(expectation) {
          return "any character";
        },

        end: function(expectation) {
          return "end of input";
        },

        other: function(expectation) {
          return expectation.description;
        }
      };

  function hex(ch) {
    return ch.charCodeAt(0).toString(16).toUpperCase();
  }

  function literalEscape(s) {
    return s
      .replace(/\\/g, '\\\\')
      .replace(/"/g,  '\\"')
      .replace(/\0/g, '\\0')
      .replace(/\t/g, '\\t')
      .replace(/\n/g, '\\n')
      .replace(/\r/g, '\\r')
      .replace(/[\x00-\x0F]/g,          function(ch) { return '\\x0' + hex(ch); })
      .replace(/[\x10-\x1F\x7F-\x9F]/g, function(ch) { return '\\x'  + hex(ch); });
  }

  function classEscape(s) {
    return s
      .replace(/\\/g, '\\\\')
      .replace(/\]/g, '\\]')
      .replace(/\^/g, '\\^')
      .replace(/-/g,  '\\-')
      .replace(/\0/g, '\\0')
      .replace(/\t/g, '\\t')
      .replace(/\n/g, '\\n')
      .replace(/\r/g, '\\r')
      .replace(/[\x00-\x0F]/g,          function(ch) { return '\\x0' + hex(ch); })
      .replace(/[\x10-\x1F\x7F-\x9F]/g, function(ch) { return '\\x'  + hex(ch); });
  }

  function describeExpectation(expectation) {
    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);
  }

  function describeExpected(expected) {
    var descriptions = new Array(expected.length),
        i, j;

    for (i = 0; i < expected.length; i++) {
      descriptions[i] = describeExpectation(expected[i]);
    }

    descriptions.sort();

    if (descriptions.length > 0) {
      for (i = 1, j = 1; i < descriptions.length; i++) {
        if (descriptions[i - 1] !== descriptions[i]) {
          descriptions[j] = descriptions[i];
          j++;
        }
      }
      descriptions.length = j;
    }

    switch (descriptions.length) {
      case 1:
        return descriptions[0];

      case 2:
        return descriptions[0] + " or " + descriptions[1];

      default:
        return descriptions.slice(0, -1).join(", ")
          + ", or "
          + descriptions[descriptions.length - 1];
    }
  }

  function describeFound(found) {
    return found ? "\"" + literalEscape(found) + "\"" : "end of input";
  }

  return "Expected " + describeExpected(expected) + " but " + describeFound(found) + " found.";
};

function peg$parse(input, options) {
  options = options !== void 0 ? options : {};

  var peg$FAILED = {},

      peg$startRuleFunctions = { Sentence: peg$parseSentence },
      peg$startRuleFunction  = peg$parseSentence,

      peg$c0 = function(l) { return l.join(''); },
      peg$c1 = function(c1, c2) { return c1 === c2; },
      peg$c2 = function(c1) { return "っ"; },
      peg$c3 = /^[b-df-hj-mp-tv-z]/,
      peg$c4 = peg$classExpectation([["b", "d"], ["f", "h"], ["j", "m"], ["p", "t"], ["v", "z"]], false, false),
      peg$c5 = peg$anyExpectation(),
      peg$c6 = "-",
      peg$c7 = peg$literalExpectation("-", false),
      peg$c8 = function() { return "ー"; },
      peg$c9 = "a",
      peg$c10 = peg$literalExpectation("a", false),
      peg$c11 = function() { return "あ"; },
      peg$c12 = "xa",
      peg$c13 = peg$literalExpectation("xa", false),
      peg$c14 = "la",
      peg$c15 = peg$literalExpectation("la", false),
      peg$c16 = function() { return "ぁ"; },
      peg$c17 = "i",
      peg$c18 = peg$literalExpectation("i", false),
      peg$c19 = function() { return "い"; },
      peg$c20 = "xi",
      peg$c21 = peg$literalExpectation("xi", false),
      peg$c22 = "li",
      peg$c23 = peg$literalExpectation("li", false),
      peg$c24 = function() { return "ぃ"; },
      peg$c25 = "ye",
      peg$c26 = peg$literalExpectation("ye", false),
      peg$c27 = function() { return "いぇ"; },
      peg$c28 = "u",
      peg$c29 = peg$literalExpectation("u", false),
      peg$c30 = "wu",
      peg$c31 = peg$literalExpectation("wu", false),
      peg$c32 = "whu",
      peg$c33 = peg$literalExpectation("whu", false),
      peg$c34 = function() { return "う"; },
      peg$c35 = "xu",
      peg$c36 = peg$literalExpectation("xu", false),
      peg$c37 = "lu",
      peg$c38 = peg$literalExpectation("lu", false),
      peg$c39 = function() { return "ぅ"; },
      peg$c40 = "vu",
      peg$c41 = peg$literalExpectation("vu", false),
      peg$c42 = function() { return "ゔ"; },
      peg$c43 = "va",
      peg$c44 = peg$literalExpectation("va", false),
      peg$c45 = function() { return "ゔぁ"; },
      peg$c46 = "whi",
      peg$c47 = peg$literalExpectation("whi", false),
      peg$c48 = "wi",
      peg$c49 = peg$literalExpectation("wi", false),
      peg$c50 = function() { return "うぃ"; },
      peg$c51 = "vi",
      peg$c52 = peg$literalExpectation("vi", false),
      peg$c53 = function() { return "ゔぃ"; },
      peg$c54 = "whe",
      peg$c55 = peg$literalExpectation("whe", false),
      peg$c56 = "we",
      peg$c57 = peg$literalExpectation("we", false),
      peg$c58 = function() { return "うぇ"; },
      peg$c59 = "ve",
      peg$c60 = peg$literalExpectation("ve", false),
      peg$c61 = function() { return "ゔぇ"; },
      peg$c62 = "who",
      peg$c63 = peg$literalExpectation("who", false),
      peg$c64 = function() { return "うぉ"; },
      peg$c65 = "vo",
      peg$c66 = peg$literalExpectation("vo", false),
      peg$c67 = function() { return "ゔぉ"; },
      peg$c68 = "vyu",
      peg$c69 = peg$literalExpectation("vyu", false),
      peg$c70 = function() { return "ゔゅ"; },
      peg$c71 = "e",
      peg$c72 = peg$literalExpectation("e", false),
      peg$c73 = function() { return "え"; },
      peg$c74 = "xe",
      peg$c75 = peg$literalExpectation("xe", false),
      peg$c76 = "le",
      peg$c77 = peg$literalExpectation("le", false),
      peg$c78 = function() { return "ぇ"; },
      peg$c79 = "o",
      peg$c80 = peg$literalExpectation("o", false),
      peg$c81 = function() { return "お"; },
      peg$c82 = "xo",
      peg$c83 = peg$literalExpectation("xo", false),
      peg$c84 = "lo",
      peg$c85 = peg$literalExpectation("lo", false),
      peg$c86 = function() { return "ぉ"; },
      peg$c87 = "ka",
      peg$c88 = peg$literalExpectation("ka", false),
      peg$c89 = function() { return "か"; },
      peg$c90 = "xka",
      peg$c91 = peg$literalExpectation("xka", false),
      peg$c92 = "lka",
      peg$c93 = peg$literalExpectation("lka", false),
      peg$c94 = function() { return "ヵ"; },
      peg$c95 = "ga",
      peg$c96 = peg$literalExpectation("ga", false),
      peg$c97 = function() { return "が"; },
      peg$c98 = "ki",
      peg$c99 = peg$literalExpectation("ki", false),
      peg$c100 = function() { return "き"; },
      peg$c101 = "gi",
      peg$c102 = peg$literalExpectation("gi", false),
      peg$c103 = function() { return "ぎ"; },
      peg$c104 = "kya",
      peg$c105 = peg$literalExpectation("kya", false),
      peg$c106 = function() { return "きゃ"; },
      peg$c107 = "gya",
      peg$c108 = peg$literalExpectation("gya", false),
      peg$c109 = function() { return "ぎゃ"; },
      peg$c110 = "kyu",
      peg$c111 = peg$literalExpectation("kyu", false),
      peg$c112 = function() { return "きゅ"; },
      peg$c113 = "gyu",
      peg$c114 = peg$literalExpectation("gyu", false),
      peg$c115 = function() { return "ぎゅ"; },
      peg$c116 = "kyo",
      peg$c117 = peg$literalExpectation("kyo", false),
      peg$c118 = function() { return "きょ"; },
      peg$c119 = "gyo",
      peg$c120 = peg$literalExpectation("gyo", false),
      peg$c121 = function() { return "ぎょ"; },
      peg$c122 = "ku",
      peg$c123 = peg$literalExpectation("ku", false),
      peg$c124 = function() { return "く"; },
      peg$c125 = "gu",
      peg$c126 = peg$literalExpectation("gu", false),
      peg$c127 = function() { return "ぐ"; },
      peg$c128 = "kwa",
      peg$c129 = peg$literalExpectation("kwa", false),
      peg$c130 = "qa",
      peg$c131 = peg$literalExpectation("qa", false),
      peg$c132 = function() { return "くぁ"; },
      peg$c133 = "gwa",
      peg$c134 = peg$literalExpectation("gwa", false),
      peg$c135 = function() { return "ぐぁ"; },
      peg$c136 = "kwi",
      peg$c137 = peg$literalExpectation("kwi", false),
      peg$c138 = "qi",
      peg$c139 = peg$literalExpectation("qi", false),
      peg$c140 = function() { return "くぃ"; },
      peg$c141 = "kwe",
      peg$c142 = peg$literalExpectation("kwe", false),
      peg$c143 = "qe",
      peg$c144 = peg$literalExpectation("qe", false),
      peg$c145 = function() { return "くぇ"; },
      peg$c146 = "kwo",
      peg$c147 = peg$literalExpectation("kwo", false),
      peg$c148 = "qo",
      peg$c149 = peg$literalExpectation("qo", false),
      peg$c150 = function() { return "くぉ"; },
      peg$c151 = "ke",
      peg$c152 = peg$literalExpectation("ke", false),
      peg$c153 = function() { return "け"; },
      peg$c154 = "xke",
      peg$c155 = peg$literalExpectation("xke", false),
      peg$c156 = "lke",
      peg$c157 = peg$literalExpectation("lke", false),
      peg$c158 = function() { return "ヶ"; },
      peg$c159 = "ge",
      peg$c160 = peg$literalExpectation("ge", false),
      peg$c161 = function() { return "げ"; },
      peg$c162 = "ko",
      peg$c163 = peg$literalExpectation("ko", false),
      peg$c164 = function() { return "こ"; },
      peg$c165 = "go",
      peg$c166 = peg$literalExpectation("go", false),
      peg$c167 = function() { return "ご"; },
      peg$c168 = "sa",
      peg$c169 = peg$literalExpectation("sa", false),
      peg$c170 = function() { return "さ"; },
      peg$c171 = "za",
      peg$c172 = peg$literalExpectation("za", false),
      peg$c173 = function() { return "ざ"; },
      peg$c174 = "si",
      peg$c175 = peg$literalExpectation("si", false),
      peg$c176 = "shi",
      peg$c177 = peg$literalExpectation("shi", false),
      peg$c178 = function() { return "し"; },
      peg$c179 = "zi",
      peg$c180 = peg$literalExpectation("zi", false),
      peg$c181 = "ji",
      peg$c182 = peg$literalExpectation("ji", false),
      peg$c183 = function() { return "じ"; },
      peg$c184 = "sye",
      peg$c185 = peg$literalExpectation("sye", false),
      peg$c186 = "she",
      peg$c187 = peg$literalExpectation("she", false),
      peg$c188 = function() { return "しぇ"; },
      peg$c189 = "zye",
      peg$c190 = peg$literalExpectation("zye", false),
      peg$c191 = "je",
      peg$c192 = peg$literalExpectation("je", false),
      peg$c193 = function() { return "じぇ"; },
      peg$c194 = "sya",
      peg$c195 = peg$literalExpectation("sya", false),
      peg$c196 = "sha",
      peg$c197 = peg$literalExpectation("sha", false),
      peg$c198 = function() { return "しゃ"; },
      peg$c199 = "zya",
      peg$c200 = peg$literalExpectation("zya", false),
      peg$c201 = "ja",
      peg$c202 = peg$literalExpectation("ja", false),
      peg$c203 = "jya",
      peg$c204 = peg$literalExpectation("jya", false),
      peg$c205 = function() { return "じゃ"; },
      peg$c206 = "syu",
      peg$c207 = peg$literalExpectation("syu", false),
      peg$c208 = "shu",
      peg$c209 = peg$literalExpectation("shu", false),
      peg$c210 = function() { return "しゅ"; },
      peg$c211 = "zyu",
      peg$c212 = peg$literalExpectation("zyu", false),
      peg$c213 = "ju",
      peg$c214 = peg$literalExpectation("ju", false),
      peg$c215 = "jyu",
      peg$c216 = peg$literalExpectation("jyu", false),
      peg$c217 = function() { return "じゅ"; },
      peg$c218 = "syo",
      peg$c219 = peg$literalExpectation("syo", false),
      peg$c220 = "sho",
      peg$c221 = peg$literalExpectation("sho", false),
      peg$c222 = function() { return "しょ"; },
      peg$c223 = "zyo",
      peg$c224 = peg$literalExpectation("zyo", false),
      peg$c225 = "jo",
      peg$c226 = peg$literalExpectation("jo", false),
      peg$c227 = "jyo",
      peg$c228 = peg$literalExpectation("jyo", false),
      peg$c229 = function() { return "じょ"; },
      peg$c230 = "su",
      peg$c231 = peg$literalExpectation("su", false),
      peg$c232 = function() { return "す"; },
      peg$c233 = "zu",
      peg$c234 = peg$literalExpectation("zu", false),
      peg$c235 = function() { return "ず"; },
      peg$c236 = "se",
      peg$c237 = peg$literalExpectation("se", false),
      peg$c238 = function() { return "せ"; },
      peg$c239 = "ze",
      peg$c240 = peg$literalExpectation("ze", false),
      peg$c241 = function() { return "ぜ"; },
      peg$c242 = "so",
      peg$c243 = peg$literalExpectation("so", false),
      peg$c244 = function() { return "そ"; },
      peg$c245 = "zo",
      peg$c246 = peg$literalExpectation("zo", false),
      peg$c247 = function() { return "ぞ"; },
      peg$c248 = "ta",
      peg$c249 = peg$literalExpectation("ta", false),
      peg$c250 = function() { return "た"; },
      peg$c251 = "da",
      peg$c252 = peg$literalExpectation("da", false),
      peg$c253 = function() { return "だ"; },
      peg$c254 = "ti",
      peg$c255 = peg$literalExpectation("ti", false),
      peg$c256 = "chi",
      peg$c257 = peg$literalExpectation("chi", false),
      peg$c258 = function() { return "ち"; },
      peg$c259 = "di",
      peg$c260 = peg$literalExpectation("di", false),
      peg$c261 = function() { return "ぢ"; },
      peg$c262 = "tye",
      peg$c263 = peg$literalExpectation("tye", false),
      peg$c264 = "che",
      peg$c265 = peg$literalExpectation("che", false),
      peg$c266 = function() { return "ちぇ"; },
      peg$c267 = "dye",
      peg$c268 = peg$literalExpectation("dye", false),
      peg$c269 = function() { return "ぢぇ"; },
      peg$c270 = "tya",
      peg$c271 = peg$literalExpectation("tya", false),
      peg$c272 = "cha",
      peg$c273 = peg$literalExpectation("cha", false),
      peg$c274 = "cya",
      peg$c275 = peg$literalExpectation("cya", false),
      peg$c276 = function() { return "ちゃ"; },
      peg$c277 = "dya",
      peg$c278 = peg$literalExpectation("dya", false),
      peg$c279 = function() { return "ぢゃ"; },
      peg$c280 = "tyu",
      peg$c281 = peg$literalExpectation("tyu", false),
      peg$c282 = "chu",
      peg$c283 = peg$literalExpectation("chu", false),
      peg$c284 = "cyu",
      peg$c285 = peg$literalExpectation("cyu", false),
      peg$c286 = function() { return "ちゅ"; },
      peg$c287 = "dyu",
      peg$c288 = peg$literalExpectation("dyu", false),
      peg$c289 = function() { return "ぢゅ"; },
      peg$c290 = "tyo",
      peg$c291 = peg$literalExpectation("tyo", false),
      peg$c292 = "cho",
      peg$c293 = peg$literalExpectation("cho", false),
      peg$c294 = "cyo",
      peg$c295 = peg$literalExpectation("cyo", false),
      peg$c296 = function() { return "ちょ"; },
      peg$c297 = "dyo",
      peg$c298 = peg$literalExpectation("dyo", false),
      peg$c299 = function() { return "ぢょ"; },
      peg$c300 = "tu",
      peg$c301 = peg$literalExpectation("tu", false),
      peg$c302 = "tsu",
      peg$c303 = peg$literalExpectation("tsu", false),
      peg$c304 = function() { return "つ"; },
      peg$c305 = "xtu",
      peg$c306 = peg$literalExpectation("xtu", false),
      peg$c307 = "xtsu",
      peg$c308 = peg$literalExpectation("xtsu", false),
      peg$c309 = "ltu",
      peg$c310 = peg$literalExpectation("ltu", false),
      peg$c311 = function() { return "っ"; },
      peg$c312 = "du",
      peg$c313 = peg$literalExpectation("du", false),
      peg$c314 = function() { return "づ"; },
      peg$c315 = "tsa",
      peg$c316 = peg$literalExpectation("tsa", false),
      peg$c317 = function() { return "つぁ"; },
      peg$c318 = "tsi",
      peg$c319 = peg$literalExpectation("tsi", false),
      peg$c320 = function() { return "つぃ"; },
      peg$c321 = "tse",
      peg$c322 = peg$literalExpectation("tse", false),
      peg$c323 = function() { return "つぇ"; },
      peg$c324 = "tso",
      peg$c325 = peg$literalExpectation("tso", false),
      peg$c326 = function() { return "つぉ"; },
      peg$c327 = "te",
      peg$c328 = peg$literalExpectation("te", false),
      peg$c329 = function() { return "て"; },
      peg$c330 = "de",
      peg$c331 = peg$literalExpectation("de", false),
      peg$c332 = function() { return "で"; },
      peg$c333 = "thi",
      peg$c334 = peg$literalExpectation("thi", false),
      peg$c335 = "t'i",
      peg$c336 = peg$literalExpectation("t'i", false),
      peg$c337 = function() { return "てぃ"; },
      peg$c338 = "dhi",
      peg$c339 = peg$literalExpectation("dhi", false),
      peg$c340 = "d'i",
      peg$c341 = peg$literalExpectation("d'i", false),
      peg$c342 = function() { return "でぃ"; },
      peg$c343 = "thu",
      peg$c344 = peg$literalExpectation("thu", false),
      peg$c345 = "t'yu",
      peg$c346 = peg$literalExpectation("t'yu", false),
      peg$c347 = function() { return "てゅ"; },
      peg$c348 = "dhu",
      peg$c349 = peg$literalExpectation("dhu", false),
      peg$c350 = "d'yu",
      peg$c351 = peg$literalExpectation("d'yu", false),
      peg$c352 = function() { return "でゅ"; },
      peg$c353 = "to",
      peg$c354 = peg$literalExpectation("to", false),
      peg$c355 = function() { return "と"; },
      peg$c356 = "do",
      peg$c357 = peg$literalExpectation("do", false),
      peg$c358 = function() { return "ど"; },
      peg$c359 = "twu",
      peg$c360 = peg$literalExpectation("twu", false),
      peg$c361 = "t'u",
      peg$c362 = peg$literalExpectation("t'u", false),
      peg$c363 = function() { return "とぅ"; },
      peg$c364 = "dwu",
      peg$c365 = peg$literalExpectation("dwu", false),
      peg$c366 = "d'u",
      peg$c367 = peg$literalExpectation("d'u", false),
      peg$c368 = function() { return "どぅ"; },
      peg$c369 = "na",
      peg$c370 = peg$literalExpectation("na", false),
      peg$c371 = function() { return "な"; },
      peg$c372 = "ni",
      peg$c373 = peg$literalExpectation("ni", false),
      peg$c374 = function() { return "に"; },
      peg$c375 = "nya",
      peg$c376 = peg$literalExpectation("nya", false),
      peg$c377 = function() { return "にゃ"; },
      peg$c378 = "nyu",
      peg$c379 = peg$literalExpectation("nyu", false),
      peg$c380 = function() { return "にゅ"; },
      peg$c381 = "nyo",
      peg$c382 = peg$literalExpectation("nyo", false),
      peg$c383 = function() { return "にょ"; },
      peg$c384 = "nu",
      peg$c385 = peg$literalExpectation("nu", false),
      peg$c386 = function() { return "ぬ"; },
      peg$c387 = "ne",
      peg$c388 = peg$literalExpectation("ne", false),
      peg$c389 = function() { return "ね"; },
      peg$c390 = "no",
      peg$c391 = peg$literalExpectation("no", false),
      peg$c392 = function() { return "の"; },
      peg$c393 = "ha",
      peg$c394 = peg$literalExpectation("ha", false),
      peg$c395 = function() { return "は"; },
      peg$c396 = "ba",
      peg$c397 = peg$literalExpectation("ba", false),
      peg$c398 = function() { return "ば"; },
      peg$c399 = "pa",
      peg$c400 = peg$literalExpectation("pa", false),
      peg$c401 = function() { return "ぱ"; },
      peg$c402 = "hi",
      peg$c403 = peg$literalExpectation("hi", false),
      peg$c404 = function() { return "ひ"; },
      peg$c405 = "bi",
      peg$c406 = peg$literalExpectation("bi", false),
      peg$c407 = function() { return "び"; },
      peg$c408 = "pi",
      peg$c409 = peg$literalExpectation("pi", false),
      peg$c410 = function() { return "ぴ"; },
      peg$c411 = "hya",
      peg$c412 = peg$literalExpectation("hya", false),
      peg$c413 = function() { return "ひゃ"; },
      peg$c414 = "bya",
      peg$c415 = peg$literalExpectation("bya", false),
      peg$c416 = function() { return "びゃ"; },
      peg$c417 = "pya",
      peg$c418 = peg$literalExpectation("pya", false),
      peg$c419 = function() { return "ぴゃ"; },
      peg$c420 = "hyu",
      peg$c421 = peg$literalExpectation("hyu", false),
      peg$c422 = function() { return "ひゅ"; },
      peg$c423 = "byu",
      peg$c424 = peg$literalExpectation("byu", false),
      peg$c425 = function() { return "びゅ"; },
      peg$c426 = "pyu",
      peg$c427 = peg$literalExpectation("pyu", false),
      peg$c428 = function() { return "ぴゅ"; },
      peg$c429 = "hyo",
      peg$c430 = peg$literalExpectation("hyo", false),
      peg$c431 = function() { return "ひょ"; },
      peg$c432 = "byo",
      peg$c433 = peg$literalExpectation("byo", false),
      peg$c434 = function() { return "びょ"; },
      peg$c435 = "pyo",
      peg$c436 = peg$literalExpectation("pyo", false),
      peg$c437 = function() { return "ぴょ"; },
      peg$c438 = "hu",
      peg$c439 = peg$literalExpectation("hu", false),
      peg$c440 = "fu",
      peg$c441 = peg$literalExpectation("fu", false),
      peg$c442 = function() { return "ふ"; },
      peg$c443 = "bu",
      peg$c444 = peg$literalExpectation("bu", false),
      peg$c445 = function() { return "ぶ"; },
      peg$c446 = "pu",
      peg$c447 = peg$literalExpectation("pu", false),
      peg$c448 = function() { return "ぷ"; },
      peg$c449 = "fa",
      peg$c450 = peg$literalExpectation("fa", false),
      peg$c451 = "hwa",
      peg$c452 = peg$literalExpectation("hwa", false),
      peg$c453 = function() { return "ふぁ"; },
      peg$c454 = "fi",
      peg$c455 = peg$literalExpectation("fi", false),
      peg$c456 = "hwi",
      peg$c457 = peg$literalExpectation("hwi", false),
      peg$c458 = function() { return "ふぃ"; },
      peg$c459 = "fe",
      peg$c460 = peg$literalExpectation("fe", false),
      peg$c461 = "hwe",
      peg$c462 = peg$literalExpectation("hwe", false),
      peg$c463 = function() { return "ふぇ"; },
      peg$c464 = "fo",
      peg$c465 = peg$literalExpectation("fo", false),
      peg$c466 = "hwo",
      peg$c467 = peg$literalExpectation("hwo", false),
      peg$c468 = function() { return "ふぉ"; },
      peg$c469 = "fyu",
      peg$c470 = peg$literalExpectation("fyu", false),
      peg$c471 = "hwyu",
      peg$c472 = peg$literalExpectation("hwyu", false),
      peg$c473 = function() { return "ふゅ"; },
      peg$c474 = "he",
      peg$c475 = peg$literalExpectation("he", false),
      peg$c476 = function() { return "へ"; },
      peg$c477 = "be",
      peg$c478 = peg$literalExpectation("be", false),
      peg$c479 = function() { return "べ"; },
      peg$c480 = "pe",
      peg$c481 = peg$literalExpectation("pe", false),
      peg$c482 = function() { return "ぺ"; },
      peg$c483 = "ho",
      peg$c484 = peg$literalExpectation("ho", false),
      peg$c485 = function() { return "ほ"; },
      peg$c486 = "bo",
      peg$c487 = peg$literalExpectation("bo", false),
      peg$c488 = function() { return "ぼ"; },
      peg$c489 = "po",
      peg$c490 = peg$literalExpectation("po", false),
      peg$c491 = function() { return "ぽ"; },
      peg$c492 = "ma",
      peg$c493 = peg$literalExpectation("ma", false),
      peg$c494 = function() { return "ま"; },
      peg$c495 = "mi",
      peg$c496 = peg$literalExpectation("mi", false),
      peg$c497 = function() { return "み"; },
      peg$c498 = "mya",
      peg$c499 = peg$literalExpectation("mya", false),
      peg$c500 = function() { return "みゃ"; },
      peg$c501 = "myu",
      peg$c502 = peg$literalExpectation("myu", false),
      peg$c503 = function() { return "みゅ"; },
      peg$c504 = "myo",
      peg$c505 = peg$literalExpectation("myo", false),
      peg$c506 = function() { return "みょ"; },
      peg$c507 = "mu",
      peg$c508 = peg$literalExpectation("mu", false),
      peg$c509 = function() { return "む"; },
      peg$c510 = "me",
      peg$c511 = peg$literalExpectation("me", false),
      peg$c512 = function() { return "め"; },
      peg$c513 = "mo",
      peg$c514 = peg$literalExpectation("mo", false),
      peg$c515 = function() { return "も"; },
      peg$c516 = "ya",
      peg$c517 = peg$literalExpectation("ya", false),
      peg$c518 = function() { return "や"; },
      peg$c519 = "xya",
      peg$c520 = peg$literalExpectation("xya", false),
      peg$c521 = "lya",
      peg$c522 = peg$literalExpectation("lya", false),
      peg$c523 = function() { return "ゃ"; },
      peg$c524 = "yu",
      peg$c525 = peg$literalExpectation("yu", false),
      peg$c526 = function() { return "ゆ"; },
      peg$c527 = "xyu",
      peg$c528 = peg$literalExpectation("xyu", false),
      peg$c529 = "lyu",
      peg$c530 = peg$literalExpectation("lyu", false),
      peg$c531 = function() { return "ゅ"; },
      peg$c532 = "yo",
      peg$c533 = peg$literalExpectation("yo", false),
      peg$c534 = function() { return "よ"; },
      peg$c535 = "xyo",
      peg$c536 = peg$literalExpectation("xyo", false),
      peg$c537 = "lyo",
      peg$c538 = peg$literalExpectation("lyo", false),
      peg$c539 = function() { return "ょ"; },
      peg$c540 = "ra",
      peg$c541 = peg$literalExpectation("ra", false),
      peg$c542 = function() { return "ら"; },
      peg$c543 = "ri",
      peg$c544 = peg$literalExpectation("ri", false),
      peg$c545 = function() { return "り"; },
      peg$c546 = "rya",
      peg$c547 = peg$literalExpectation("rya", false),
      peg$c548 = function() { return "りゃ"; },
      peg$c549 = "ryu",
      peg$c550 = peg$literalExpectation("ryu", false),
      peg$c551 = function() { return "りゅ"; },
      peg$c552 = "ryo",
      peg$c553 = peg$literalExpectation("ryo", false),
      peg$c554 = function() { return "りょ"; },
      peg$c555 = "ru",
      peg$c556 = peg$literalExpectation("ru", false),
      peg$c557 = function() { return "る"; },
      peg$c558 = "re",
      peg$c559 = peg$literalExpectation("re", false),
      peg$c560 = function() { return "れ"; },
      peg$c561 = "ro",
      peg$c562 = peg$literalExpectation("ro", false),
      peg$c563 = function() { return "ろ"; },
      peg$c564 = "wa",
      peg$c565 = peg$literalExpectation("wa", false),
      peg$c566 = function() { return "わ"; },
      peg$c567 = "xwa",
      peg$c568 = peg$literalExpectation("xwa", false),
      peg$c569 = "lwa",
      peg$c570 = peg$literalExpectation("lwa", false),
      peg$c571 = function() { return "ゎ"; },
      peg$c572 = "wyi",
      peg$c573 = peg$literalExpectation("wyi", false),
      peg$c574 = function() { return "ゐ"; },
      peg$c575 = "wye",
      peg$c576 = peg$literalExpectation("wye", false),
      peg$c577 = function() { return "ゑ"; },
      peg$c578 = "wo",
      peg$c579 = peg$literalExpectation("wo", false),
      peg$c580 = function() { return "を"; },
      peg$c581 = "n'",
      peg$c582 = peg$literalExpectation("n'", false),
      peg$c583 = "nn",
      peg$c584 = peg$literalExpectation("nn", false),
      peg$c585 = "n",
      peg$c586 = peg$literalExpectation("n", false),
      peg$c587 = function() { return "ん"; },

      peg$currPos          = 0,
      peg$savedPos         = 0,
      peg$posDetailsCache  = [{ line: 1, column: 1 }],
      peg$maxFailPos       = 0,
      peg$maxFailExpected  = [],
      peg$silentFails      = 0,

      peg$result;

  if ("startRule" in options) {
    if (!(options.startRule in peg$startRuleFunctions)) {
      throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
    }

    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
  }

  function text() {
    return input.substring(peg$savedPos, peg$currPos);
  }

  function location() {
    return peg$computeLocation(peg$savedPos, peg$currPos);
  }

  function expected(description, location) {
    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)

    throw peg$buildStructuredError(
      [peg$otherExpectation(description)],
      input.substring(peg$savedPos, peg$currPos),
      location
    );
  }

  function error(message, location) {
    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)

    throw peg$buildSimpleError(message, location);
  }

  function peg$literalExpectation(text, ignoreCase) {
    return { type: "literal", text: text, ignoreCase: ignoreCase };
  }

  function peg$classExpectation(parts, inverted, ignoreCase) {
    return { type: "class", parts: parts, inverted: inverted, ignoreCase: ignoreCase };
  }

  function peg$anyExpectation() {
    return { type: "any" };
  }

  function peg$endExpectation() {
    return { type: "end" };
  }

  function peg$otherExpectation(description) {
    return { type: "other", description: description };
  }

  function peg$computePosDetails(pos) {
    var details = peg$posDetailsCache[pos], p;

    if (details) {
      return details;
    } else {
      p = pos - 1;
      while (!peg$posDetailsCache[p]) {
        p--;
      }

      details = peg$posDetailsCache[p];
      details = {
        line:   details.line,
        column: details.column
      };

      while (p < pos) {
        if (input.charCodeAt(p) === 10) {
          details.line++;
          details.column = 1;
        } else {
          details.column++;
        }

        p++;
      }

      peg$posDetailsCache[pos] = details;
      return details;
    }
  }

  function peg$computeLocation(startPos, endPos) {
    var startPosDetails = peg$computePosDetails(startPos),
        endPosDetails   = peg$computePosDetails(endPos);

    return {
      start: {
        offset: startPos,
        line:   startPosDetails.line,
        column: startPosDetails.column
      },
      end: {
        offset: endPos,
        line:   endPosDetails.line,
        column: endPosDetails.column
      }
    };
  }

  function peg$fail(expected) {
    if (peg$currPos < peg$maxFailPos) { return; }

    if (peg$currPos > peg$maxFailPos) {
      peg$maxFailPos = peg$currPos;
      peg$maxFailExpected = [];
    }

    peg$maxFailExpected.push(expected);
  }

  function peg$buildSimpleError(message, location) {
    return new peg$SyntaxError(message, null, null, location);
  }

  function peg$buildStructuredError(expected, found, location) {
    return new peg$SyntaxError(
      peg$SyntaxError.buildMessage(expected, found),
      expected,
      found,
      location
    );
  }

  function peg$parseSentence() {
    var s0, s1, s2;

    s0 = peg$currPos;
    s1 = [];
    s2 = peg$parseLetter();
    while (s2 !== peg$FAILED) {
      s1.push(s2);
      s2 = peg$parseLetter();
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c0(s1);
    }
    s0 = s1;

    return s0;
  }

  function peg$parseLetter() {
    var s0;

    s0 = peg$parseConsonants();
    if (s0 === peg$FAILED) {
      s0 = peg$parseRoman();
      if (s0 === peg$FAILED) {
        s0 = peg$parseOther();
      }
    }

    return s0;
  }

  function peg$parseConsonants() {
    var s0, s1, s2, s3, s4, s5;

    s0 = peg$currPos;
    s1 = peg$parseConsonant();
    if (s1 !== peg$FAILED) {
      s2 = peg$currPos;
      peg$silentFails++;
      s3 = peg$currPos;
      s4 = peg$parseConsonant();
      if (s4 !== peg$FAILED) {
        peg$savedPos = peg$currPos;
        s5 = peg$c1(s1, s4);
        if (s5) {
          s5 = void 0;
        } else {
          s5 = peg$FAILED;
        }
        if (s5 !== peg$FAILED) {
          s4 = [s4, s5];
          s3 = s4;
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
      } else {
        peg$currPos = s3;
        s3 = peg$FAILED;
      }
      peg$silentFails--;
      if (s3 !== peg$FAILED) {
        peg$currPos = s2;
        s2 = void 0;
      } else {
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c2(s1);
        s0 = s1;
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseConsonant() {
    var s0;

    if (peg$c3.test(input.charAt(peg$currPos))) {
      s0 = input.charAt(peg$currPos);
      peg$currPos++;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c4); }
    }

    return s0;
  }

  function peg$parseRoman() {
    var s0;

    s0 = peg$parseー();
    if (s0 === peg$FAILED) {
      s0 = peg$parseあ();
      if (s0 === peg$FAILED) {
        s0 = peg$parseぁ();
        if (s0 === peg$FAILED) {
          s0 = peg$parseい();
          if (s0 === peg$FAILED) {
            s0 = peg$parseぃ();
            if (s0 === peg$FAILED) {
              s0 = peg$parseいぇ();
              if (s0 === peg$FAILED) {
                s0 = peg$parseう();
                if (s0 === peg$FAILED) {
                  s0 = peg$parseぅ();
                  if (s0 === peg$FAILED) {
                    s0 = peg$parseゔ();
                    if (s0 === peg$FAILED) {
                      s0 = peg$parseゔぁ();
                      if (s0 === peg$FAILED) {
                        s0 = peg$parseうぃ();
                        if (s0 === peg$FAILED) {
                          s0 = peg$parseゔぃ();
                          if (s0 === peg$FAILED) {
                            s0 = peg$parseうぇ();
                            if (s0 === peg$FAILED) {
                              s0 = peg$parseゔぇ();
                              if (s0 === peg$FAILED) {
                                s0 = peg$parseうぉ();
                                if (s0 === peg$FAILED) {
                                  s0 = peg$parseゔぉ();
                                  if (s0 === peg$FAILED) {
                                    s0 = peg$parseゔゅ();
                                    if (s0 === peg$FAILED) {
                                      s0 = peg$parseえ();
                                      if (s0 === peg$FAILED) {
                                        s0 = peg$parseぇ();
                                        if (s0 === peg$FAILED) {
                                          s0 = peg$parseお();
                                          if (s0 === peg$FAILED) {
                                            s0 = peg$parseぉ();
                                            if (s0 === peg$FAILED) {
                                              s0 = peg$parseか();
                                              if (s0 === peg$FAILED) {
                                                s0 = peg$parseヵ();
                                                if (s0 === peg$FAILED) {
                                                  s0 = peg$parseが();
                                                  if (s0 === peg$FAILED) {
                                                    s0 = peg$parseき();
                                                    if (s0 === peg$FAILED) {
                                                      s0 = peg$parseぎ();
                                                      if (s0 === peg$FAILED) {
                                                        s0 = peg$parseきゃ();
                                                        if (s0 === peg$FAILED) {
                                                          s0 = peg$parseぎゃ();
                                                          if (s0 === peg$FAILED) {
                                                            s0 = peg$parseきゅ();
                                                            if (s0 === peg$FAILED) {
                                                              s0 = peg$parseぎゅ();
                                                              if (s0 === peg$FAILED) {
                                                                s0 = peg$parseきょ();
                                                                if (s0 === peg$FAILED) {
                                                                  s0 = peg$parseぎょ();
                                                                  if (s0 === peg$FAILED) {
                                                                    s0 = peg$parseく();
                                                                    if (s0 === peg$FAILED) {
                                                                      s0 = peg$parseぐ();
                                                                      if (s0 === peg$FAILED) {
                                                                        s0 = peg$parseくぁ();
                                                                        if (s0 === peg$FAILED) {
                                                                          s0 = peg$parseぐぁ();
                                                                          if (s0 === peg$FAILED) {
                                                                            s0 = peg$parseくぃ();
                                                                            if (s0 === peg$FAILED) {
                                                                              s0 = peg$parseくぇ();
                                                                              if (s0 === peg$FAILED) {
                                                                                s0 = peg$parseくぉ();
                                                                                if (s0 === peg$FAILED) {
                                                                                  s0 = peg$parseけ();
                                                                                  if (s0 === peg$FAILED) {
                                                                                    s0 = peg$parseヶ();
                                                                                    if (s0 === peg$FAILED) {
                                                                                      s0 = peg$parseげ();
                                                                                      if (s0 === peg$FAILED) {
                                                                                        s0 = peg$parseこ();
                                                                                        if (s0 === peg$FAILED) {
                                                                                          s0 = peg$parseご();
                                                                                          if (s0 === peg$FAILED) {
                                                                                            s0 = peg$parseさ();
                                                                                            if (s0 === peg$FAILED) {
                                                                                              s0 = peg$parseざ();
                                                                                              if (s0 === peg$FAILED) {
                                                                                                s0 = peg$parseし();
                                                                                                if (s0 === peg$FAILED) {
                                                                                                  s0 = peg$parseじ();
                                                                                                  if (s0 === peg$FAILED) {
                                                                                                    s0 = peg$parseしぇ();
                                                                                                    if (s0 === peg$FAILED) {
                                                                                                      s0 = peg$parseじぇ();
                                                                                                      if (s0 === peg$FAILED) {
                                                                                                        s0 = peg$parseしゃ();
                                                                                                        if (s0 === peg$FAILED) {
                                                                                                          s0 = peg$parseじゃ();
                                                                                                          if (s0 === peg$FAILED) {
                                                                                                            s0 = peg$parseしゅ();
                                                                                                            if (s0 === peg$FAILED) {
                                                                                                              s0 = peg$parseじゅ();
                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                s0 = peg$parseしょ();
                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                  s0 = peg$parseじょ();
                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                    s0 = peg$parseす();
                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                      s0 = peg$parseず();
                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                        s0 = peg$parseせ();
                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                          s0 = peg$parseぜ();
                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                            s0 = peg$parseそ();
                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                              s0 = peg$parseぞ();
                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                s0 = peg$parseた();
                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                  s0 = peg$parseだ();
                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                    s0 = peg$parseち();
                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                      s0 = peg$parseぢ();
                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                        s0 = peg$parseちぇ();
                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                          s0 = peg$parseぢぇ();
                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                            s0 = peg$parseちゃ();
                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                              s0 = peg$parseぢゃ();
                                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                                s0 = peg$parseちゅ();
                                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                                  s0 = peg$parseぢゅ();
                                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                                    s0 = peg$parseちょ();
                                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                                      s0 = peg$parseぢょ();
                                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                                        s0 = peg$parseつ();
                                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                                          s0 = peg$parseっ();
                                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                                            s0 = peg$parseづ();
                                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                                              s0 = peg$parseつぁ();
                                                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                                                s0 = peg$parseつぃ();
                                                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                                                  s0 = peg$parseつぇ();
                                                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                                                    s0 = peg$parseつぉ();
                                                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                                                      s0 = peg$parseて();
                                                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                                                        s0 = peg$parseで();
                                                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                                                          s0 = peg$parseてぃ();
                                                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                                                            s0 = peg$parseでぃ();
                                                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                                                              s0 = peg$parseてゅ();
                                                                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                                                                s0 = peg$parseでゅ();
                                                                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                                                                  s0 = peg$parseと();
                                                                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                                                                    s0 = peg$parseど();
                                                                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                                                                      s0 = peg$parseとぅ();
                                                                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                                                                        s0 = peg$parseどぅ();
                                                                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                                                                          s0 = peg$parseな();
                                                                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                                                                            s0 = peg$parseに();
                                                                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                                                                              s0 = peg$parseにゃ();
                                                                                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                                                                                s0 = peg$parseにゅ();
                                                                                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                                                                                  s0 = peg$parseにょ();
                                                                                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                                                                                    s0 = peg$parseぬ();
                                                                                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                                                                                      s0 = peg$parseね();
                                                                                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                                                                                        s0 = peg$parseの();
                                                                                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                                                                                          s0 = peg$parseは();
                                                                                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                                                                                            s0 = peg$parseば();
                                                                                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                                                                                              s0 = peg$parseぱ();
                                                                                                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                                                                                                s0 = peg$parseひ();
                                                                                                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                                                                                                  s0 = peg$parseび();
                                                                                                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                                                                                                    s0 = peg$parseぴ();
                                                                                                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                                                                                                      s0 = peg$parseひゃ();
                                                                                                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                                                                                                        s0 = peg$parseびゃ();
                                                                                                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                                                                                                          s0 = peg$parseぴゃ();
                                                                                                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                                                                                                            s0 = peg$parseひゅ();
                                                                                                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                                                                                                              s0 = peg$parseびゅ();
                                                                                                                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                s0 = peg$parseぴゅ();
                                                                                                                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                  s0 = peg$parseひょ();
                                                                                                                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                    s0 = peg$parseびょ();
                                                                                                                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                      s0 = peg$parseぴょ();
                                                                                                                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                        s0 = peg$parseふ();
                                                                                                                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                          s0 = peg$parseぶ();
                                                                                                                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                            s0 = peg$parseぷ();
                                                                                                                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                              s0 = peg$parseふぁ();
                                                                                                                                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                s0 = peg$parseふぃ();
                                                                                                                                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                  s0 = peg$parseふぇ();
                                                                                                                                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                    s0 = peg$parseふぉ();
                                                                                                                                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                      s0 = peg$parseふゅ();
                                                                                                                                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                        s0 = peg$parseへ();
                                                                                                                                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                          s0 = peg$parseべ();
                                                                                                                                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                            s0 = peg$parseぺ();
                                                                                                                                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                              s0 = peg$parseほ();
                                                                                                                                                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                s0 = peg$parseぼ();
                                                                                                                                                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                  s0 = peg$parseぽ();
                                                                                                                                                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                    s0 = peg$parseま();
                                                                                                                                                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                      s0 = peg$parseみ();
                                                                                                                                                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                        s0 = peg$parseみゃ();
                                                                                                                                                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                          s0 = peg$parseみゅ();
                                                                                                                                                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                            s0 = peg$parseみょ();
                                                                                                                                                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                              s0 = peg$parseむ();
                                                                                                                                                                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                                s0 = peg$parseめ();
                                                                                                                                                                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                                  s0 = peg$parseも();
                                                                                                                                                                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                                    s0 = peg$parseや();
                                                                                                                                                                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                                      s0 = peg$parseゃ();
                                                                                                                                                                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                                        s0 = peg$parseゆ();
                                                                                                                                                                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                                          s0 = peg$parseゅ();
                                                                                                                                                                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                                            s0 = peg$parseよ();
                                                                                                                                                                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                                              s0 = peg$parseょ();
                                                                                                                                                                                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                                                s0 = peg$parseら();
                                                                                                                                                                                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                                                  s0 = peg$parseり();
                                                                                                                                                                                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                                                    s0 = peg$parseりゃ();
                                                                                                                                                                                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                                                      s0 = peg$parseりゅ();
                                                                                                                                                                                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                                                        s0 = peg$parseりょ();
                                                                                                                                                                                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                                                          s0 = peg$parseる();
                                                                                                                                                                                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                                                            s0 = peg$parseれ();
                                                                                                                                                                                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                                                              s0 = peg$parseろ();
                                                                                                                                                                                                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                                                                s0 = peg$parseわ();
                                                                                                                                                                                                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                                                                  s0 = peg$parseゎ();
                                                                                                                                                                                                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                                                                    s0 = peg$parseゐ();
                                                                                                                                                                                                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                                                                      s0 = peg$parseゑ();
                                                                                                                                                                                                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                                                                        s0 = peg$parseを();
                                                                                                                                                                                                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                                                                                                                                                                                                          s0 = peg$parseん();
                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseOther() {
    var s0;

    if (input.length > peg$currPos) {
      s0 = input.charAt(peg$currPos);
      peg$currPos++;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c5); }
    }

    return s0;
  }

  function peg$parseー() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 45) {
      s1 = peg$c6;
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c7); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c8();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseあ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 97) {
      s1 = peg$c9;
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c10); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c11();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぁ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c12) {
      s1 = peg$c12;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c13); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 2) === peg$c14) {
        s1 = peg$c14;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c15); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c16();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseい() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 105) {
      s1 = peg$c17;
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c18); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c19();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぃ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c20) {
      s1 = peg$c20;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c21); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 2) === peg$c22) {
        s1 = peg$c22;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c23); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c24();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseいぇ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c25) {
      s1 = peg$c25;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c26); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c27();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseう() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 117) {
      s1 = peg$c28;
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c29); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 2) === peg$c30) {
        s1 = peg$c30;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c31); }
      }
      if (s1 === peg$FAILED) {
        if (input.substr(peg$currPos, 3) === peg$c32) {
          s1 = peg$c32;
          peg$currPos += 3;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c33); }
        }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c34();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぅ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c35) {
      s1 = peg$c35;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c36); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 2) === peg$c37) {
        s1 = peg$c37;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c38); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c39();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseゔ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c40) {
      s1 = peg$c40;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c41); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c42();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseゔぁ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c43) {
      s1 = peg$c43;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c44); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c45();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseうぃ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c46) {
      s1 = peg$c46;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c47); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 2) === peg$c48) {
        s1 = peg$c48;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c49); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c50();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseゔぃ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c51) {
      s1 = peg$c51;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c52); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c53();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseうぇ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c54) {
      s1 = peg$c54;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c55); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 2) === peg$c56) {
        s1 = peg$c56;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c57); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c58();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseゔぇ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c59) {
      s1 = peg$c59;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c60); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c61();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseうぉ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c62) {
      s1 = peg$c62;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c63); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c64();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseゔぉ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c65) {
      s1 = peg$c65;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c66); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c67();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseゔゅ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c68) {
      s1 = peg$c68;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c69); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c70();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseえ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 101) {
      s1 = peg$c71;
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c72); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c73();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぇ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c74) {
      s1 = peg$c74;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c75); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 2) === peg$c76) {
        s1 = peg$c76;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c77); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c78();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseお() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 111) {
      s1 = peg$c79;
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c80); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c81();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぉ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c82) {
      s1 = peg$c82;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c83); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 2) === peg$c84) {
        s1 = peg$c84;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c85); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c86();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseか() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c87) {
      s1 = peg$c87;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c88); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c89();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseヵ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c90) {
      s1 = peg$c90;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c91); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 3) === peg$c92) {
        s1 = peg$c92;
        peg$currPos += 3;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c93); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c94();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseが() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c95) {
      s1 = peg$c95;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c96); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c97();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseき() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c98) {
      s1 = peg$c98;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c99); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c100();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぎ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c101) {
      s1 = peg$c101;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c102); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c103();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseきゃ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c104) {
      s1 = peg$c104;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c105); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c106();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぎゃ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c107) {
      s1 = peg$c107;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c108); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c109();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseきゅ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c110) {
      s1 = peg$c110;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c111); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c112();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぎゅ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c113) {
      s1 = peg$c113;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c114); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c115();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseきょ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c116) {
      s1 = peg$c116;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c117); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c118();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぎょ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c119) {
      s1 = peg$c119;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c120); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c121();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseく() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c122) {
      s1 = peg$c122;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c123); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c124();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぐ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c125) {
      s1 = peg$c125;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c126); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c127();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseくぁ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c128) {
      s1 = peg$c128;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c129); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 2) === peg$c130) {
        s1 = peg$c130;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c131); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c132();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぐぁ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c133) {
      s1 = peg$c133;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c134); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c135();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseくぃ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c136) {
      s1 = peg$c136;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c137); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 2) === peg$c138) {
        s1 = peg$c138;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c139); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c140();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseくぇ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c141) {
      s1 = peg$c141;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c142); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 2) === peg$c143) {
        s1 = peg$c143;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c144); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c145();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseくぉ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c146) {
      s1 = peg$c146;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c147); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 2) === peg$c148) {
        s1 = peg$c148;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c149); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c150();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseけ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c151) {
      s1 = peg$c151;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c152); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c153();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseヶ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c154) {
      s1 = peg$c154;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c155); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 3) === peg$c156) {
        s1 = peg$c156;
        peg$currPos += 3;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c157); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c158();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseげ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c159) {
      s1 = peg$c159;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c160); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c161();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseこ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c162) {
      s1 = peg$c162;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c163); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c164();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseご() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c165) {
      s1 = peg$c165;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c166); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c167();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseさ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c168) {
      s1 = peg$c168;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c169); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c170();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseざ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c171) {
      s1 = peg$c171;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c172); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c173();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseし() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c174) {
      s1 = peg$c174;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c175); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 3) === peg$c176) {
        s1 = peg$c176;
        peg$currPos += 3;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c177); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c178();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseじ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c179) {
      s1 = peg$c179;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c180); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 2) === peg$c181) {
        s1 = peg$c181;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c182); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c183();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseしぇ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c184) {
      s1 = peg$c184;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c185); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 3) === peg$c186) {
        s1 = peg$c186;
        peg$currPos += 3;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c187); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c188();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseじぇ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c189) {
      s1 = peg$c189;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c190); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 2) === peg$c191) {
        s1 = peg$c191;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c192); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c193();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseしゃ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c194) {
      s1 = peg$c194;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c195); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 3) === peg$c196) {
        s1 = peg$c196;
        peg$currPos += 3;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c197); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c198();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseじゃ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c199) {
      s1 = peg$c199;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c200); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 2) === peg$c201) {
        s1 = peg$c201;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c202); }
      }
      if (s1 === peg$FAILED) {
        if (input.substr(peg$currPos, 3) === peg$c203) {
          s1 = peg$c203;
          peg$currPos += 3;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c204); }
        }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c205();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseしゅ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c206) {
      s1 = peg$c206;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c207); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 3) === peg$c208) {
        s1 = peg$c208;
        peg$currPos += 3;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c209); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c210();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseじゅ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c211) {
      s1 = peg$c211;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c212); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 2) === peg$c213) {
        s1 = peg$c213;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c214); }
      }
      if (s1 === peg$FAILED) {
        if (input.substr(peg$currPos, 3) === peg$c215) {
          s1 = peg$c215;
          peg$currPos += 3;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c216); }
        }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c217();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseしょ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c218) {
      s1 = peg$c218;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c219); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 3) === peg$c220) {
        s1 = peg$c220;
        peg$currPos += 3;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c221); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c222();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseじょ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c223) {
      s1 = peg$c223;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c224); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 2) === peg$c225) {
        s1 = peg$c225;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c226); }
      }
      if (s1 === peg$FAILED) {
        if (input.substr(peg$currPos, 3) === peg$c227) {
          s1 = peg$c227;
          peg$currPos += 3;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c228); }
        }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c229();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseす() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c230) {
      s1 = peg$c230;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c231); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c232();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseず() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c233) {
      s1 = peg$c233;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c234); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c235();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseせ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c236) {
      s1 = peg$c236;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c237); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c238();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぜ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c239) {
      s1 = peg$c239;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c240); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c241();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseそ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c242) {
      s1 = peg$c242;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c243); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c244();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぞ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c245) {
      s1 = peg$c245;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c246); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c247();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseた() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c248) {
      s1 = peg$c248;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c249); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c250();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseだ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c251) {
      s1 = peg$c251;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c252); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c253();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseち() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c254) {
      s1 = peg$c254;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c255); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 3) === peg$c256) {
        s1 = peg$c256;
        peg$currPos += 3;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c257); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c258();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぢ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c259) {
      s1 = peg$c259;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c260); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c261();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseちぇ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c262) {
      s1 = peg$c262;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c263); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 3) === peg$c264) {
        s1 = peg$c264;
        peg$currPos += 3;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c265); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c266();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぢぇ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c267) {
      s1 = peg$c267;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c268); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c269();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseちゃ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c270) {
      s1 = peg$c270;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c271); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 3) === peg$c272) {
        s1 = peg$c272;
        peg$currPos += 3;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c273); }
      }
      if (s1 === peg$FAILED) {
        if (input.substr(peg$currPos, 3) === peg$c274) {
          s1 = peg$c274;
          peg$currPos += 3;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c275); }
        }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c276();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぢゃ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c277) {
      s1 = peg$c277;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c278); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c279();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseちゅ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c280) {
      s1 = peg$c280;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c281); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 3) === peg$c282) {
        s1 = peg$c282;
        peg$currPos += 3;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c283); }
      }
      if (s1 === peg$FAILED) {
        if (input.substr(peg$currPos, 3) === peg$c284) {
          s1 = peg$c284;
          peg$currPos += 3;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c285); }
        }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c286();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぢゅ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c287) {
      s1 = peg$c287;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c288); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c289();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseちょ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c290) {
      s1 = peg$c290;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c291); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 3) === peg$c292) {
        s1 = peg$c292;
        peg$currPos += 3;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c293); }
      }
      if (s1 === peg$FAILED) {
        if (input.substr(peg$currPos, 3) === peg$c294) {
          s1 = peg$c294;
          peg$currPos += 3;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c295); }
        }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c296();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぢょ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c297) {
      s1 = peg$c297;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c298); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c299();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseつ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c300) {
      s1 = peg$c300;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c301); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 3) === peg$c302) {
        s1 = peg$c302;
        peg$currPos += 3;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c303); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c304();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseっ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c305) {
      s1 = peg$c305;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c306); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 4) === peg$c307) {
        s1 = peg$c307;
        peg$currPos += 4;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c308); }
      }
      if (s1 === peg$FAILED) {
        if (input.substr(peg$currPos, 3) === peg$c309) {
          s1 = peg$c309;
          peg$currPos += 3;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c310); }
        }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c311();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseづ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c312) {
      s1 = peg$c312;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c313); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c314();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseつぁ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c315) {
      s1 = peg$c315;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c316); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c317();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseつぃ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c318) {
      s1 = peg$c318;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c319); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c320();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseつぇ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c321) {
      s1 = peg$c321;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c322); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c323();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseつぉ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c324) {
      s1 = peg$c324;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c325); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c326();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseて() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c327) {
      s1 = peg$c327;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c328); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c329();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseで() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c330) {
      s1 = peg$c330;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c331); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c332();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseてぃ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c333) {
      s1 = peg$c333;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c334); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 3) === peg$c335) {
        s1 = peg$c335;
        peg$currPos += 3;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c336); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c337();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseでぃ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c338) {
      s1 = peg$c338;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c339); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 3) === peg$c340) {
        s1 = peg$c340;
        peg$currPos += 3;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c341); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c342();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseてゅ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c343) {
      s1 = peg$c343;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c344); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 4) === peg$c345) {
        s1 = peg$c345;
        peg$currPos += 4;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c346); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c347();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseでゅ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c348) {
      s1 = peg$c348;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c349); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 4) === peg$c350) {
        s1 = peg$c350;
        peg$currPos += 4;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c351); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c352();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseと() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c353) {
      s1 = peg$c353;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c354); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c355();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseど() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c356) {
      s1 = peg$c356;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c357); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c358();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseとぅ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c359) {
      s1 = peg$c359;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c360); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 3) === peg$c361) {
        s1 = peg$c361;
        peg$currPos += 3;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c362); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c363();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseどぅ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c364) {
      s1 = peg$c364;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c365); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 3) === peg$c366) {
        s1 = peg$c366;
        peg$currPos += 3;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c367); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c368();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseな() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c369) {
      s1 = peg$c369;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c370); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c371();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseに() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c372) {
      s1 = peg$c372;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c373); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c374();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseにゃ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c375) {
      s1 = peg$c375;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c376); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c377();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseにゅ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c378) {
      s1 = peg$c378;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c379); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c380();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseにょ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c381) {
      s1 = peg$c381;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c382); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c383();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぬ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c384) {
      s1 = peg$c384;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c385); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c386();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseね() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c387) {
      s1 = peg$c387;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c388); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c389();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseの() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c390) {
      s1 = peg$c390;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c391); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c392();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseは() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c393) {
      s1 = peg$c393;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c394); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c395();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseば() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c396) {
      s1 = peg$c396;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c397); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c398();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぱ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c399) {
      s1 = peg$c399;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c400); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c401();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseひ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c402) {
      s1 = peg$c402;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c403); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c404();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseび() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c405) {
      s1 = peg$c405;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c406); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c407();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぴ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c408) {
      s1 = peg$c408;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c409); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c410();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseひゃ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c411) {
      s1 = peg$c411;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c412); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c413();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseびゃ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c414) {
      s1 = peg$c414;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c415); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c416();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぴゃ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c417) {
      s1 = peg$c417;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c418); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c419();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseひゅ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c420) {
      s1 = peg$c420;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c421); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c422();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseびゅ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c423) {
      s1 = peg$c423;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c424); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c425();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぴゅ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c426) {
      s1 = peg$c426;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c427); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c428();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseひょ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c429) {
      s1 = peg$c429;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c430); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c431();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseびょ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c432) {
      s1 = peg$c432;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c433); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c434();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぴょ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c435) {
      s1 = peg$c435;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c436); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c437();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseふ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c438) {
      s1 = peg$c438;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c439); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 2) === peg$c440) {
        s1 = peg$c440;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c441); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c442();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぶ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c443) {
      s1 = peg$c443;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c444); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c445();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぷ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c446) {
      s1 = peg$c446;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c447); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c448();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseふぁ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c449) {
      s1 = peg$c449;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c450); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 3) === peg$c451) {
        s1 = peg$c451;
        peg$currPos += 3;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c452); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c453();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseふぃ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c454) {
      s1 = peg$c454;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c455); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 3) === peg$c456) {
        s1 = peg$c456;
        peg$currPos += 3;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c457); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c458();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseふぇ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c459) {
      s1 = peg$c459;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c460); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 3) === peg$c461) {
        s1 = peg$c461;
        peg$currPos += 3;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c462); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c463();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseふぉ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c464) {
      s1 = peg$c464;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c465); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 3) === peg$c466) {
        s1 = peg$c466;
        peg$currPos += 3;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c467); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c468();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseふゅ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c469) {
      s1 = peg$c469;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c470); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 4) === peg$c471) {
        s1 = peg$c471;
        peg$currPos += 4;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c472); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c473();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseへ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c474) {
      s1 = peg$c474;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c475); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c476();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseべ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c477) {
      s1 = peg$c477;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c478); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c479();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぺ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c480) {
      s1 = peg$c480;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c481); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c482();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseほ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c483) {
      s1 = peg$c483;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c484); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c485();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぼ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c486) {
      s1 = peg$c486;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c487); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c488();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseぽ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c489) {
      s1 = peg$c489;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c490); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c491();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseま() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c492) {
      s1 = peg$c492;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c493); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c494();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseみ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c495) {
      s1 = peg$c495;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c496); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c497();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseみゃ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c498) {
      s1 = peg$c498;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c499); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c500();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseみゅ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c501) {
      s1 = peg$c501;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c502); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c503();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseみょ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c504) {
      s1 = peg$c504;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c505); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c506();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseむ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c507) {
      s1 = peg$c507;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c508); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c509();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseめ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c510) {
      s1 = peg$c510;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c511); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c512();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseも() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c513) {
      s1 = peg$c513;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c514); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c515();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseや() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c516) {
      s1 = peg$c516;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c517); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c518();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseゃ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c519) {
      s1 = peg$c519;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c520); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 3) === peg$c521) {
        s1 = peg$c521;
        peg$currPos += 3;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c522); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c523();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseゆ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c524) {
      s1 = peg$c524;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c525); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c526();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseゅ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c527) {
      s1 = peg$c527;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c528); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 3) === peg$c529) {
        s1 = peg$c529;
        peg$currPos += 3;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c530); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c531();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseよ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c532) {
      s1 = peg$c532;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c533); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c534();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseょ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c535) {
      s1 = peg$c535;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c536); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 3) === peg$c537) {
        s1 = peg$c537;
        peg$currPos += 3;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c538); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c539();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseら() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c540) {
      s1 = peg$c540;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c541); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c542();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseり() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c543) {
      s1 = peg$c543;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c544); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c545();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseりゃ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c546) {
      s1 = peg$c546;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c547); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c548();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseりゅ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c549) {
      s1 = peg$c549;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c550); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c551();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseりょ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c552) {
      s1 = peg$c552;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c553); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c554();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseる() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c555) {
      s1 = peg$c555;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c556); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c557();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseれ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c558) {
      s1 = peg$c558;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c559); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c560();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseろ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c561) {
      s1 = peg$c561;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c562); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c563();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseわ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c564) {
      s1 = peg$c564;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c565); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c566();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseゎ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c567) {
      s1 = peg$c567;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c568); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 3) === peg$c569) {
        s1 = peg$c569;
        peg$currPos += 3;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c570); }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c571();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseゐ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c572) {
      s1 = peg$c572;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c573); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c574();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseゑ() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c575) {
      s1 = peg$c575;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c576); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c577();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseを() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c578) {
      s1 = peg$c578;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c579); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c580();
    }
    s0 = s1;

    return s0;
  }

  function peg$parseん() {
    var s0, s1;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c581) {
      s1 = peg$c581;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c582); }
    }
    if (s1 === peg$FAILED) {
      if (input.substr(peg$currPos, 2) === peg$c583) {
        s1 = peg$c583;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c584); }
      }
      if (s1 === peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 110) {
          s1 = peg$c585;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c586); }
        }
      }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c587();
    }
    s0 = s1;

    return s0;
  }

  peg$result = peg$startRuleFunction();

  if (peg$result !== peg$FAILED && peg$currPos === input.length) {
    return peg$result;
  } else {
    if (peg$result !== peg$FAILED && peg$currPos < input.length) {
      peg$fail(peg$endExpectation());
    }

    throw peg$buildStructuredError(
      peg$maxFailExpected,
      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,
      peg$maxFailPos < input.length
        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)
        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)
    );
  }
}

module.exports = {
  SyntaxError: peg$SyntaxError,
  parse:       peg$parse
};

});
